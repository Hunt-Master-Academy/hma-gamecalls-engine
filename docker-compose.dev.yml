version: "3.8"

services:
  # C++ Development Container
  cpp-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: huntmaster-cpp-dev
    hostname: huntmaster-dev
    ports:
      - "8080:8080" # Web server
      - "3000:3000" # Development server
      - "5000:5000" # API server
    volumes:
      # Mount source code with consistent permissions
      - .:/workspace:cached
      # Persistent build cache
      - ccache-data:/workspace/.ccache
      # Persistent general tooling cache (clang-tidy, etc.)
      - tooling-cache:/workspace/.cache
      # VS Code server data
      - vscode-server:/home/developer/.vscode-server
      # Preserve bash history
      - bash-history:/commandhistory
    environment:
      # WSL Audio setup
      - PULSE_SERVER=tcp:host.docker.internal:4713
      - DISPLAY=host.docker.internal:0
      # Development environment
      - TERM=xterm-256color
      - CMAKE_BUILD_PARALLEL_LEVEL=8
      # Cache configuration
      - CCACHE_DIR=/workspace/.ccache
      - CCACHE_MAXSIZE=5G
    # Use host network for better WSL integration
    network_mode: "host"
    # Keep container running
    command: sleep infinity
    # Security options for debugging
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

  # WebAssembly Builder Service
  wasm-builder:
    image: emscripten/emsdk:latest
    container_name: huntmaster-wasm-builder
    volumes:
      - .:/src:cached
      - wasm-cache:/emsdk/upstream/emscripten/cache
    working_dir: /src
    environment:
      - EMCC_CORES=8
    command: tail -f /dev/null

volumes:
  ccache-data:
    driver: local
  vscode-server:
    driver: local
  bash-history:
    driver: local
  wasm-cache:
    driver: local
  tooling-cache:
    driver: local
