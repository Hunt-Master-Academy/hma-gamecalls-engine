# File: .github/workflows/ci.yml
# CI/CD configuration for GitHub Actions
# DISABLED - Actions suspended until deployment readiness

name: Huntmaster Engine CI

# DISABLED: Automatic triggers suspended - only manual execution allowed
on:
  workflow_dispatch: # Manual trigger only

# DISABLED TRIGGERS:
# on:
#   push:
#     branches: [main, develop]
#   pull_request:
#     branches: [main]

jobs:
  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: gcc
        include:
          - os: windows-latest
            compiler: msvc

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup C++20 compiler
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=20

      - name: Build
        run: cmake --build build --config Release

      - name: Test
        run: |
          cd build
          ctest -C Release --output-on-failure

  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: 3.1.50

      - name: Configure WASM build
        run: |
          emcmake cmake -B build-wasm \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build WASM
        run: cmake --build build-wasm

      - name: Upload WASM artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wasm-build
          path: |
            build-wasm/*.js
            build-wasm/*.wasm
            bindings/wasm/*.d.ts

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          find src include -name '*.cpp' -o -name '*.h' | \
            xargs clang-tidy -p build --checks='-*,modernize-*,performance-*'

      - name: Run cppcheck
        run: |
          cppcheck --enable=all --std=c++20 \
            --suppress=missingIncludeSystem \
            -I include src/
